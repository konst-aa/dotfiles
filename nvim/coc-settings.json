{
    "rust-analyzer.cargo.buildScripts.useRustcWrapper": true,
    "rpc.showProblems": false,
    "ltex.configurationTarget": {
        "dictionary": "userExternalFile",
        "disabledRules": "userExternalFile",
        "hiddenFalsePositives": "workspaceExternalFile"
    },
    "cSpell.enabledLanguageIds": [
        "markdown",
        "plaintext",
        "latex"
    ],
    "coc.preferences.formatOnSaveFiletypes": [
        "json",
        "python"
    ],
    "rust-analyzer.enable": true,
    "rust-analyzer.server.path": "~/.nix-profile/bin/rust-analyzer",
    "languageserver": {
        "scheme-langserver": {
            "command": "scheme-langserver",
            "filetypes": [
                "scheme",
                ".sls"
            ]
        },
        "ccls": {
            "command": "ccls",
            "filetypes": [
                "c"
            ],
            "rootPatterns": [
                ".ccls",
                "compile_commands.json",
                ".vim/",
                ".git/",
                ".hg/"
            ],
            "initializationOptions": {
                "cache": {
                    "directory": "/tmp/ccls"
                },
                "clang": {
                    "extraArgs": [
                        "-isystem",
                        "/usr/include/c++/11/bits"
                    ]
                }
            }
        },
        "nix": {
            "command": "rnix-lsp",
            "filetypes": [
                "nix"
            ]
        },
        "solidity": {
            "command": "solc --lsp",
            "filetypes": [
                "sol"
            ]
        },
        "haskell": {
            "command": "haskell-language-server-wrapper",
            "args": [
                "--lsp"
            ],
            "rootPatterns": [
                "*.cabal",
                "stack.yaml",
                "cabal.project",
                "package.yaml",
                "hie.yaml"
            ],
            "filetypes": [
                "haskell",
                "lhaskell"
            ],
            // Settings are optional, here are some example values
            "settings": {
                "haskell": {
                    "checkParents": "CheckOnSave",
                    "checkProject": true,
                    "maxCompletions": 40,
                    "formattingProvider": "ormolu"
                }
            }
        },
        "elixir": {
            "command": "elixir-ls",
            "filetypes": [
                "elixir"
            ]
        },
        "csharp-ls": {
            "command": "~/.dotnet/tools/csharp-ls",
            "filetypes": [
                "cs"
            ],
            "rootPatterns": [
                "*.csproj",
                ".vim/",
                ".git/",
                ".hg/"
            ]
        }
    },
    "suggest.noselect": true,
    "python.formatting.provider": "black",
    "python.formatting.blackPath": "~/.nix-profile/bin/black",
    "Lua.workspace.checkThirdParty": false,
    "Lua.diagnostics.globals": [
        "vim"
    ],
    "clangd.path": "~/.config/coc/extensions/coc-clangd-data/install/17.0.3/clangd_17.0.3/bin/clangd"
}
